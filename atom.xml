<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[一亩三分田]]></title>
  <link href="http://cnupdog.github.io/atom.xml" rel="self"/>
  <link href="http://cnupdog.github.io/"/>
  <updated>2014-02-03T18:34:30+08:00</updated>
  <id>http://cnupdog.github.io/</id>
  <author>
    <name><![CDATA[cnupdog@gmail.com]]></name>
    <email><![CDATA[cnupdog@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[开始使用Django(1)]]></title>
    <link href="http://cnupdog.github.io/blog/2014/02/03/kai-shi-shi-yong-django-1/"/>
    <updated>2014-02-03T18:34:25+08:00</updated>
    <id>http://cnupdog.github.io/blog/2014/02/03/kai-shi-shi-yong-django-1</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开始使用Django(一)]]></title>
    <link href="http://cnupdog.github.io/blog/2014/02/03/kai-shi-shi-yong-django-%5B%3F%5D/"/>
    <updated>2014-02-03T18:24:55+08:00</updated>
    <id>http://cnupdog.github.io/blog/2014/02/03/kai-shi-shi-yong-django-[?]</id>
    <content type="html"><![CDATA[<p> 在开始学习使用Django之后，第一次遇到的难题就是静态文件（static）的配置，网上资料很多，但也经过多次失败的尝试。所以决心理清这块内容的实际原理。</p>

<h2>Django目录结构</h2>

<p>Django本身没有制定标准的目录结构规范，所以我们会看到不同的项目目录结构，当然也对应着不同的配置文件。但对于有代码洁癖的人来说，想从一开始就<code>最佳实践</code>。<br/>
在<a href="http://yangyubo.com/django-best-practices">Django最佳实践</a>中有推荐的布局，如下：<br/>
<img src="http://cnupdog.github.io/assets/img/django/django-project-dirs.jpg" alt="Django项目推荐布局" title="Django项目推荐布局" width="100%" />
当然目前基于开发比较多的是WEB应用，我们可以将项目（Project）定位为一个平台，应用（App）定位为一个模块。</p>

<p>其中静态文件夹有两种部署模式：“分布式“、“集中式“。分布式是在各个APP下建立static文件夹并包含img\css\js文件。集中式是在Project路径下建立static文件夹并包含img\css\js文件，即统一管理所有App使用到的静态资源。</p>

<h2>Django如何处理静态文件（基本原理）</h2>

<p>在实际的WEB站点中，静态文件一般是单独处理，例如使用naginx作为静态文件服务器或者使用CDN进行静态资源加速。当然Django中也可以这么去处理，Django在开发环境这么去处理静态文件：通过一系列的配置（setting.py指定静态文件的路径，url.py添加url匹配路由），然后交由Django内置的django.views.static.server()来处理。</p>

<h2>Django如何处理静态文件（详细配置）</h2>

<p>以下的详细配置，是基于Django1.4，并且准备采用“集中式”静态文件管理方式来阐述的。</p>

<p><code>setting.py</code>有如下几个重要配置需要注意：</p>

<p>STATIC_ROOT:  运行collectstatic，所有app中的静态文件包括在STATICFILES_DIRS中指定的都会手机到此目录，这在部署的时候很方便，开发的时候可以忽略此设置。（建议留空！）</p>

<p>STATIC_URL:  用来配置静态文件请求的URL前缀，例如域名<a href="http://www.ooxx.com%EF%BC%8C%E5%B9%B6%E4%B8%94%E4%BD%A0%E7%9A%84STATIC_URL=">http://www.ooxx.com%EF%BC%8C%E5%B9%B6%E4%B8%94%E4%BD%A0%E7%9A%84STATIC_URL=</a>&lsquo;/static/&#8217;，那么你访问静态文件的URL将类似<a href="http://www.ooxx.com/static/img/xixihaha.jpg">http://www.ooxx.com/static/img/xixihaha.jpg</a></p>

<p>ADMIN_MEDIA_PREFIX:  是Django后台管理模块使用的静态文件配置。</p>

<p>STATICFILES_DIRS:  （默认情况下staticfiles认为静态文件是存放在各app的static目录下）这是静态文件放置的目录，我们如果采用“集中式”管理静态文件，即static文件夹在项目的根目录下和App平级。为了移植方便，可以这么去配置：</p>

<pre><code>BASE = os.path.dirname(os.path.abspath(__file__))  
STATICFILES_DIRS = (os.path.join(BASE,'static').replace('\\','/'),)
</code></pre>

<p><code>url.py</code>对应也需要配置，在末尾增加：</p>

<pre><code>urlpatterns += staticfiles_urlpatterns() #静态文件的路由
</code></pre>

<p>上面的配置结束后，我们就可以这么去使用了：</p>

<pre><code>&lt;link rel="stylesheet" href="css/bootstrap/bootstrap.css" /&gt;  
</code></pre>

<p>-EOF-</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你好，杰克尔！]]></title>
    <link href="http://cnupdog.github.io/blog/2014/02/03/ni-hao-%2Cjie-ke-er-%21/"/>
    <updated>2014-02-03T18:17:21+08:00</updated>
    <id>http://cnupdog.github.io/blog/2014/02/03/ni-hao-,jie-ke-er-!</id>
    <content type="html"><![CDATA[<p>Jekyll(<code>发音/'dʒiːk əl/，"杰克尔"</code>)是一个静态站点生成器，它会根据网页源码生成静态文件。它提供了模板（推荐使用<a href="http://jekyllbootstrap.com">@Jekyllbootstrap</a>）、变量、插件等功能。</p>

<p>  用Jekyll可以轻而易举的搭建出博客，尤其适合技术博客。你可别指望这把小匕首有WordPress那样的良好体验、强大功能，但它能为我们提供：</p>

<ul>
<li>理想的写作环境（使用<code>markdown</code>，不再忧虑排版，可专注写作）</li>
<li>更好的代码管理（使用<code>git</code>，你将体验并且感受分布式代码管理的便捷）</li>
<li>屌丝的搭建方式（使用<code>github</code>，可以省下虚拟主机和数据库服务，直接在其之上托管整个网站）</li>
<li>全面的插件服务（使用<code>disqus</code>、<code>gravatar</code>、<code>highlightJS</code>等等）</li>
</ul>


<p>   下面是搭建本站参考的一些资料：</p>

<ul>
<li> <a href="http://www.v2ex.com/t/25779">Jekyll-bootstrap教程</a></li>
<li> <a href="http://www.feimos.com/translation_markdown_the_ins_and_outs/">Markdown:输入与输出</a></li>
<li> <a href="http://jiyeqian.github.com/2011/09/introduction-to-git/">GIT速查手册</a></li>
<li> <a href="https://www.dnspod.cn/Support">DNSPod官方帮助中心</a></li>
</ul>


<p>   -EOF-</p>
]]></content>
  </entry>
  
</feed>
